name: Gradle test
on: push
jobs:
  # Uses action-setup-postgres
  gradle-action-test:
    strategy:
      matrix:
        platform: [ windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: ikalnytskyi/action-setup-postgres@v4
        with:
          username: ${{secrets.POSTGRES_USER}}
          password: ${{secrets.POSTGRES_PASSWORD}}
          database: kotlin_blog
          port: 5432
        id: postgres
      - uses: actions/checkout@v3
      - if: matrix.platform == 'windows-latest'
        name: Create env.properties and seed database (Windows)
        run: |
          New-Item ./env.properties
          "JDBC_PSQL_URI=${{secrets.JDBC_PSQL_URI}}`nPSQL_USER=${{secrets.PSQL_USER}}`nPSQL_PASSWORD=${{secrets.PSQL_PASSWORD}}" | Out-File -FilePath ./env.properties
          $Env:PGPASSWORD="${{secrets.POSTGRES_PASSWORD}}"
          psql -h localhost -d kotlin_blog -U $Env:POSTGRES_USER -f .github/psql_seed.sql
      - if: matrix.platform == 'ubuntu-latest'
        name: Create env.properties and seed database (Ubuntu)
        run: |
          touch env.properties
          printf "JDBC_PSQL_URI=%s\nPSQL_USER=%s\nPSQL_PASSWORD=%s" "${{secrets.JDBC_PSQL_URI}}" "${{secrets.PSQL_USER}}" "${{secrets.PSQL_PASSWORD}}" >> env.properties
          PGPASSWORD="${{secrets.POSTGRES_PASSWORD}}" psql -h localhost -d kotlin_blog -U ${{secrets.POSTGRES_USER}} -f .github/psql_seed.sql
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.6
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
      - name: Test with Gradle
        run: ./gradlew test --no-daemon

  # Uses postgres on the runner machine
  gradle-runner-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: kotlin_blog
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Create env.properties and seed database
        env:
          JDBC_PSQL_URI: ${{secrets.JDBC_PSQL_URI}}
          PSQL_USER: ${{secrets.PSQL_USER}}
          PSQL_PASSWORD: ${{secrets.PSQL_PASSWORD}}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        run: |
          touch env.properties
          printf "JDBC_PSQL_URI=%s\nPSQL_USER=%s\nPSQL_PASSWORD=%s" "$JDBC_PSQL_URI" "$PSQL_USER" "$PSQL_PASSWORD" >> env.properties
          PGPASSWORD="$POSTGRES_PASSWORD" psql -h localhost -U $POSTGRES_USER -d kotlin_blog -f .github/psql_seed.sql
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.6
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
      - name: Test with Gradle
        run: ./gradlew test --no-daemon
