version: '2'

services:
  app:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
      dockerfile: ./docker/spring.dockerfile
    container_name: app
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/kotlinblog
      - SPRING_DATASOURCE_USERNAME=composeOrElse
      - SPRING_DATASOURCE_PASSWORD=throwNewNull
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "1018:8080"

  db:
    image: 'postgres:13.1-alpine'
    build:
      context: .
      dockerfile: ./docker/postgres.dockerfile
    container_name: db
    environment:
      - POSTGRES_USER=composeOrElse
      - POSTGRES_PASSWORD=throwNewNull
      - POSTGRES_DB=kotlinblog

  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: prometheus-container
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "1029:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:9.1.4
    container_name: grafana-container
    depends_on:
      - prometheus
    ports:
      - "1040:3000"
    volumes:
      - ./grafana/:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost